<?php
/**
 * This file is part of Reaction (RXN).
 *
 * @license MIT License (MIT)
 * @author David Wyly (davidwyly) <david.wyly@gmail.com>
 */

namespace Rxn;

class Config
{

    /**
     * Defines the root application folder
     * Note: Changing this has not been thoroughly tested!
     *
     * Default value: 'rxn'
     *
     * @var string
     */
    public $appFolder = 'rxn';

    /**
     * Defines the root vendor folder
     * Note: Changing this has not been thoroughly tested!
     *
     * Default value: 'vendor'
     *
     * @var string
     */
    public $vendorFolder = 'vendor';

    /**
     * Defines the vendor/product namespace for vendor models and controllers
     *
     * @var string
     */
    public $vendorNamespace = '\\Vendor\\Product';

    /**
     * Sets the filecache directory that needs special read/write permissions
     *
     * @var string
     */
    public $fileCacheDirectory = 'filecache';

    /**
     * Uncomment this below to define an application key for encryption
     */
    // public $applicationKey = "application key goes here";

    /**
     * Defines the root of the application and vendor folders relative to this file
     *
     * @var string
     */
    public $relativeRoot = "/../";

    /**
     * Defines your default database settings
     *
     * @var array
     */
    public $databaseDefaultSettings = [
        'host'     => 'localhost',
        'name'     => 'database',
        'username' => 'username',
        'password' => 'secret',
        'charset'  => 'utf8',
    ];

    /**
     * Defines default keys for URL params and routing
     *
     * @var array
     */
    public $endpointParameters = [
        "version",
        "controller",
        "action",
    ];

    /**
     * enable or disable caching
     *
     * @var bool
     */
    public $allowCaching = false;

    /**
     * Use a valid \DateTime timezone
     *
     * @var string
     */
    public $timezone = 'America/Denver';

    /**
     * Do not edit; this is set by the constructor
     *
     * @var string
     */
    public $root;

    public function __construct() {
        $this->root = realpath(__DIR__ . $this->relativeRoot);
    }
}